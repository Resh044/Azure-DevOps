Docker commands :
docker --version : it will show the latest built version of docker
docker pull alpine : it will pull the latest  images from registery
docker images : it will give list of images
docker run aphine : it will run the container

docker ps -a : it will give us list of containers

docker pull alpine:3.19 (tag version) : it will pull the particular tag from registery

another way of of running the container is 
docker run (image id) : it will run & exit the container

docker run -it jenkins (any repos) : Directly running the container 

docker run -it -d jenkins (any repos ) : it will run the container in background 

docker ps : only running containers will display

docker run -it d --name=jenkins jenkins : it will change the name of container

docker inspect jenkins02(container id or name ): it will display the discription of particular container

docker stop jenkins02 (container id) : it will stop the conatiner from running 

another way of stopping the multiple  container is 
docker stop 22 22 22 : only 2 digits of conatiner id 

docker rm jenkins02 (any container id ): deleting the container

another way of deleting the multiple container id is :
docker rm 22 22 22 : 

docker rm cb :

docker rmi 22 (image id or repos or tag ) : to delete the images

anyother of deleting multiple images is : 
docker rmi 22 22 22  (image id or repos or tag)

docker run -p 8080:8080 -p 50000:50000 jenkins:2.60.2 : porting the map to external user

docker start 222 (3 digits of container id ) : it wll restart the container and exit at the same time
--------------------------------------------------
DOCKER FILE :
FROM : built new image from old version of any application like python : ex : pythin 3.5
creating base image  .

RUN : apt update && apt install maven .
for creating any image we need some sort of libraries and dependencies that we will install in run command and we can define more than one run .

LABEL : author 
ENV : (environmental variable ) : SONAR_USER =xyz  ( credentiials for using server for other persons for security 

WORKDIR : (work directry) : location of work directry / app 

COPY : / demo /app 
it will copy locally from system like c drive or d drive 

ADD : www.xyx.com / app  zipped file can be unzipped at the same time .

difrnce b/w copy and add 
Copy will copy only from local , it will not copy from internet and it will not copy from other sources .
ADD : it will copy from local if you want or other wise it will copy from internet and if it is in zipped format it will unzipp the file 

EXPOSE : any port no or any range , what ever the port no we can expoe for mapping for external user

CMD : run .. basicallt this cmd helps the image to run and covert into container .. at the time of running the container 

ENTRYPOINT : cmd and entrypoint are same . in entrypoint priority will be given 

--------------------------------------------------------
monolithic : only 1 service for frontend backend and database 
microservices : multiple services for databases :
multiple services for frontend , backend  and database
----------------------------
-e = means variable 
-d = it will run the container in background (detached mode)
-t = directly running the container

-------------------------
database :

docker run -t -d -e POSTGRES_PASSWORD=45678 -e POSTGRES_USER=postgres postgres:15

docker run -t -d -e POSTGRES_PASSWORD=45678 postgres:15

docker run -t -d -e POSTGRES_USER=postgres postgres:15

-----------
mount the volume means for particular location / container / volume
------------------------------
Docker volumes : 3 types
anonymos volume type
named Volume type
Host volume type
